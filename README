README - Smart Licensing
# Smart Licensing – מערכת הערכת רישוי עסקים

## תיאור הפרויקט
מערכת אינטראקטיבית המסייעת לבעלי עסקים להבין את דרישות הרישוי הרלוונטיות לעסק שלהם בישראל.  
המערכת אוספת נתונים מהמשתמש (סוג עסק, גודל, מקומות ישיבה, מאפיינים נוספים) ומייצרת דוח מותאם אישית בעזרת שילוב בין נתוני JSON מובנים לבין מודל שפה (OpenAI GPT).

## הוראות התקנה והרצה
### דרישות מוקדמות
- Python 3.11+
- Docker + Docker Compose
- מפתח API ל-OpenAI (נשמר במשתנה סביבה OPENAI_API_KEY)

### התקנה
```bash
git clone https://github.com/username/smart-licensing.git
cd smart-licensing
docker-compose up --build
```

### הרצה מקומית
```bash
export OPENAI_API_KEY=your_key_here
python app.py
```

### גישה
- Frontend: https://smart-licensing.site  
- Backend API: https://smart-licensing.site/api/generate-report

## רשימת Dependencies
- Flask 3.0.3
- Gunicorn 23.0.0
- openai 1.3.5
- TailwindCSS (CDN)
- Lucide Icons

---

## תיעוד טכני

### ארכיטקטורת המערכת
- **Frontend** – HTML/CSS/JS סטטי רץ ב-Nginx
- **Backend** – Flask API רץ תחת Gunicorn ב-Docker
- **Database** – קבצי JSON עם חוקים והגדרות
- **AI Integration** – OpenAI GPT-4o-mini ליצירת דוחות מותאמים

דיאגרמה בסיסית:
```
משתמש ←→ Nginx ←→ Flask API ←→ OpenAI API
                     ↑
                  JSON Rules
```

### תיעוד API
- `GET /` – בדיקת חיות השרת
- `POST /api/generate-report`
  - קלט: JSON עם פרטי העסק
  - פלט: דוח מותאם אישית (תקציר מנהלים, דרישות, המלצות, הערכות עלות/זמן)

### מבנה הנתונים (דוגמה מתוך rules.json)
```json
{
  "id": "R801",
  "title": "עקרונות לניקוי מטבח",
  "applies_when": { "business_type": "מטבח מוסדי" },
  "actions": [
    "ביצוע תהליך בסיסי לכלי עבודה ושטחים",
    "תדירות ניקוי יומית"
  ],
  "priority": "קריטי"
}
```

### אלגוריתם ההתאמה
1. טעינת החוקים מקבצי JSON
2. סינון חוקים לפי סוג העסק והמאפיינים
3. יצירת Prompt הכולל נתוני העסק + חוקים רלוונטיים
4. שליחת Prompt ל-OpenAI
5. עיבוד התשובה והצגתה למשתמש בדוח מסודר

---

## תיעוד שימוש ב-AI

### כלי פיתוח
- ChatGPT / Cursor AI – לכתיבת קוד מהיר
- GitHub Copilot – הצעות קוד
- Replit – בדיקות מהירות

### מודל שפה מרכזי
- GPT-4o-mini (OpenAI) – נבחר בזכות ביצועים טובים ומהירות גבוהה

### Prompts לדוגמה
```
צור דוח רישוי לעסק בשם "קפה על הדרך".
סוג העסק: בית קפה, שטח: 45 מ"ר, מקומות ישיבה: 20.

דרישות רגולטוריות שנמצאו בקובץ:
[...]

אנא הפק דוח ברור עם:
- תקציר מנהלים
- דרישות חובה לפי עדיפות
- המלצות פעולה
- לוח זמנים להיערכות
- הערכת עלויות
```

---

## למידה ושיפורים

### יומן פיתוח
- בעיה: קובצי JSON לא נטענו ב-Docker → פתרון: COPY לתוך image
- בעיה: openai.ChatCompletion הוסר → פתרון: שדרוג לקוד client.chat.completions.create
- בעיה: 404 בין Nginx ל-API → פתרון: עדכון proxy_pass

### שיפורים עתידיים
- הוספת תמיכה בסוגי עסקים נוספים
- תמיכה במסדי נתונים (PostgreSQL במקום JSON)
- תמיכה בריבוי שפות (עברית/אנגלית)
- ממשק ניהול חוקים

### לקחים
- שימוש ב-AI מאיץ מאוד את פיתוח הקוד
- חשוב לבדוק תאימות גרסאות של ספריות (openai 0.x → 1.x)
- פריסה עם Docker/Nginx מאפשרת מעבר מהיר לשרת ענן

